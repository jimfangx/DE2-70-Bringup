/*
Top level module, drawing code
*/

module VGA_Draw (
    input iCLK,

    output [9:0] oVGA_R,
    output [9:0] oVGA_G,
    output [9:0] oVGA_B,
    output oVGA_HS,
    output oVGA_VS,
    output oVGA_SYNC,
    output oVGA_BLANK,
    output oVGA_CLOCK
);

wire iRST;
wire CLK_25;
// reg [9:0] paint_r, paint_g, paint_b;
wire [9:0] VGA_X, VGA_Y;
reg square;
reg [9:0] display_r, display_g, display_b;
reg [9:0] paint_r, paint_g, paint_b;


Reset_Delay reset(
    .iCLK(iCLK),
    .oRESET(iRST)
);

clock_25 vga_clock(
    .iCLK(iCLK),
    .iRST(iRST),
    .oCLK_25(CLK_25)
);

VGA_Controller controller(
    .iRed(paint_r),
    .iGreen(paint_g),
    .iBlue(paint_b),

    .iCLK(CLK_25),
    .iRST_N(iRST),
    
    .oCoord_X(VGA_X),
    .oCoord_Y(VGA_Y),

    .oVGA_R(oVGA_R),
	.oVGA_G(oVGA_G),
	.oVGA_B(oVGA_B),
	.oVGA_H_SYNC(oVGA_HS),
	.oVGA_V_SYNC(oVGA_VS),
	.oVGA_SYNC(oVGA_SYNC),
	.oVGA_BLANK(oVGA_BLANK),
	.oVGA_CLOCK(oVGA_CLOCK)
);

// always @(*) begin
//     square = (VGA_X > 220 && VGA_X < 420) && (VGA_Y > 140 && VGA_Y < 340);
//     paint_r = (square) ? 10'hF : 10'h1;
//     paint_g = (square) ? 10'hF : 10'h3;
//     paint_b = (square) ? 10'hF : 10'h7;
// end

// define a square with screen coordinates
    // reg square;
    // always @(*) begin
    //     square = (VGA_X > 220 && VGA_X < 420) && (VGA_Y > 140 && VGA_Y < 340);
    // end

    // paint colour: white inside square, blue outside
    // always @(*) begin
    //     // paint_r = (square) ? 10'hF : 10'h1;
    //     // paint_g = (square) ? 10'hF : 10'h3;
    //     // paint_b = (square) ? 10'hF : 10'h7;
    //     paint_r =  10'hF;
    //     paint_g =  10'hF;
    //     paint_b =  10'hF;
    // end

    // display colour: paint colour but black in blanking interval
    always @(*) begin
        // display_r = (oVGA_BLANK) ? paint_r : 10'h0;
        // display_g = (oVGA_BLANK) ? paint_g : 10'h0;
        // display_b = (oVGA_BLANK) ? paint_b : 10'h0;
        display_r = 255;
display_g = 255;
display_b = 255;
    end

    
endmodule